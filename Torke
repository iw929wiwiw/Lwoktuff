repeat task.wait() until workspace:FindFirstChild("Plots")

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local allowedPlaceIds = {109983668079237}

if not table.find(allowedPlaceIds, game.PlaceId) then return end

local WebhookURL_2M  = "https://discord.com/api/webhooks/1424575392144031745/6lYRuhd5Z7sGPq2Th3vYzZxBlLXPGziGjNhqKZKj87hBvSb6NLVR_Oml_va3-l5uJn5w"
local WebhookURL_10M = "https://discord.com/api/webhooks/1424590868974932062/7gyZFxRdapA4Fm4p-gL5R4qOIAdBNezLKnAGK2tMS8MNGzgcf2GUEtG_ZWC1NicOlJ9P"

local placeId = game.PlaceId
local req = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

local success, productInfo = pcall(function()
	return MarketplaceService:GetProductInfo(placeId)
end)
local gameName = success and productInfo and productInfo.Name or "Unknown Game"

local scannedPets, activeBatches = {}, {}

local function convertTextToNumber(text)
	if not text or not text:find("/s") then return 0 end
	text = text:gsub("%$", ""):gsub("/s", ""):gsub("%s+", "")
	local mult = 1
	if text:find("K") or text:find("k") then mult = 1e3
	elseif text:find("M") or text:find("m") then mult = 1e6
	elseif text:find("B") or text:find("b") then mult = 1e9
	elseif text:find("T") or text:find("t") then mult = 1e12 end
	return (tonumber(text:match("[%d%.]+")) or 0) * mult
end

local function cleanMutationText(txt)
	if not txt or txt == "" then return "None" end
	if txt:find("<stroke") or txt:find("<font") then return "Yin Yang" end
	return txt:gsub("<.->", "")
end

local function getWebhookByValue(v)
	if v >= 10000000 then
		return WebhookURL_10M
	elseif v >= 2000000 then
		return WebhookURL_2M
	end
	return nil
end

local function sendWebhook(petsList, playerCount)
	if #petsList == 0 then return end

	local jobId = game.JobId
	local joinLink = string.format("https://nameless-289z.onrender.com/join.html?placeId=%s&jobId=%s", placeId, jobId)

	local highestValue = 0
	for _, data in ipairs(petsList) do
		if data.value > highestValue then
			highestValue = data.value
		end
	end

	local webhookURL = getWebhookByValue(highestValue)
	if not webhookURL then return end

	local lines = {}
	for _, data in ipairs(petsList) do
		table.insert(lines, string.format("**%s** ‚Äî `%s/s` | üß¨ `%s` | üîÆ `%s`", data.name, data.generation, data.tag, data.mutation))
	end

	local embed = {
		["title"] = "KenGer | Nameless | Ringta Hub's.",
		["description"] = "**Pet notification details**",
		["color"] = 16711680,
		["fields"] = {
			{
				["name"] = "üèõÔ∏è Name:",
				["value"] = table.concat(lines, "\n"),
				["inline"] = false
			},
			{
				["name"] = "üìä Generation:",
				["value"] = string.format("Top: `$%.1fM/s`", highestValue / 1e6),
				["inline"] = true
			},
			{
				["name"] = "üë• Players:",
				["value"] = string.format("%d/8", playerCount),
				["inline"] = true
			},
			{
				["name"] = "üîó Server Link:",
				["value"] = string.format("[Join Server](%s)", joinLink),
				["inline"] = false
			},
			{
				["name"] = "üì± Job-ID (Mobile):",
				["value"] = jobId,
				["inline"] = false
			},
			{
				["name"] = "üíª Job-ID (PC):",
				["value"] = string.format("``%s``", jobId),
				["inline"] = false
			},
			{
				["name"] = "‚û°Ô∏è Join:",
				["value"] = string.format("```lua\ngame:GetService('TeleportService'):TeleportToPlaceInstance(%d, '%s', game.Players.LocalPlayer)\n```", placeId, jobId),
				["inline"] = false
			}
		},
		["footer"] = { ["text"] = "Premium" }
	}

	local payload = HttpService:JSONEncode({embeds = {embed}})
	if req then
		task.spawn(function()
			req({
				Url = webhookURL,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = payload
			})
		end)
	end
end

local function processLabel(lbl)
	if not (lbl and lbl:IsA("TextLabel") and lbl.Name == "Generation") then return end
	if not lbl.Parent then return end

	local petId = lbl.Parent:GetDebugId()
	if scannedPets[petId] then return end
	scannedPets[petId] = true

	local value = convertTextToNumber(lbl.Text)
	if value < 2000000 then return end

	local playerCount = #Players:GetPlayers()
	if playerCount < 6 or playerCount > 8 then return end

	local petName = lbl.Parent:FindFirstChild("DisplayName") and lbl.Parent.DisplayName.Text or "Unknown"
	local moneyPerSec = lbl.Text
	local rarity = lbl.Parent:FindFirstChild("Rarity") and lbl.Parent.Rarity.Text or "Unknown"
	if rarity == "Brainrot God" then return end

	local mutation = "None"
	local mutationTag = lbl.Parent:FindFirstChild("Mutation")
	if mutationTag and mutationTag.Visible then
		mutation = cleanMutationText(mutationTag.Text)
	end

	local data = {
		name = petName,
		generation = moneyPerSec,
		value = value,
		tag = rarity,
		mutation = mutation
	}

	task.spawn(sendWebhook, {data}, playerCount)
end

for _, v in ipairs(workspace.Plots:GetDescendants()) do
	if v:IsA("TextLabel") and v.Name == "Generation" then
		task.spawn(processLabel, v)
	end
end

workspace.Plots.DescendantAdded:Connect(function(v)
	if v:IsA("TextLabel") and v.Name == "Generation" then
		task.spawn(processLabel, v)
	end
end)
